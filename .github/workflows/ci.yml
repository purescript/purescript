name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # when true, one job's failure will cancel other jobs
      matrix:
        os: [ ubuntu-16.04, macOS-latest, windows-latest ]
    steps:
      - name: Add '$HOME/.local/bin/ to PATH
        run: echo "$HOME/.local/bin/" >> $GITHUB_PATH

      # We set LF endings so that the Windows environment is consistent with Appveyor
      # See here for context: https://github.com/actions/checkout/issues/135
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      # NB: We install gnu-tar because BSD tar is buggy on Github's MacOS machines,
      # and it breaks the cache: https://github.com/actions/cache/issues/403
      - name: Install GNU tar (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install gnu-tar
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.stack
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml') }}-1

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "10"

      - name: Setup Haskell
        uses: haskell/actions/setup@v1
        with:
          enable-stack: true
          stack-version: '2.1.1'

      - name: Install hlint
        run: BIN_DIR="$HOME/.local/bin/" BUILD_DIR="$HOME/hlint" ci/install-hlint.sh

      - name: Print Stack info
        run: |
          echo "::group::stack --version"
          stack --version
          echo "::endgroup::"

          echo "::group::stack --no-terminal setup"
          stack --no-terminal setup
          echo "::endgroup::"

          echo "::group::stack path"
          stack path
          echo "::endgroup::"

      - name: Install Bower
        run: npm install -g bower # for psc-docs / psc-publish tests

      - name: Run "hlint --git"
        run: hlint --git

      - name: Run tests
        run: ./ci/build.sh
