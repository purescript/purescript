// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var MonadError = function (__superclass_Prelude$dotMonad_0, catchError, throwError) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.catchError = catchError;
    this.throwError = throwError;
};
var throwError = function (dict) {
    return dict.throwError;
};
var monadErrorMaybe = new MonadError(function () {
    return Data_Maybe.monadMaybe;
}, function (_351) {
    return function (f) {
        if (_351 instanceof Data_Maybe.Nothing) {
            return f(Prelude.unit);
        };
        if (_351 instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(_351.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 51, column 1 - line 54, column 32: " + [ _351.constructor.name, f.constructor.name ]);
    };
}, Prelude["const"](Data_Maybe.Nothing.value));
var monadErrorEither = new MonadError(function () {
    return Data_Either.monadEither;
}, function (_350) {
    return function (h) {
        if (_350 instanceof Data_Either.Left) {
            return h(_350.value0);
        };
        if (_350 instanceof Data_Either.Right) {
            return new Data_Either.Right(_350.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 46, column 1 - line 51, column 1: " + [ _350.constructor.name, h.constructor.name ]);
    };
}, Data_Either.Left.create);
var catchError = function (dict) {
    return dict.catchError;
};
var catchJust = function (__dict_MonadError_0) {
    return function (p) {
        return function (act) {
            return function (handler) {
                var handle = function (e) {
                    var _1249 = p(e);
                    if (_1249 instanceof Data_Maybe.Nothing) {
                        return throwError(__dict_MonadError_0)(e);
                    };
                    if (_1249 instanceof Data_Maybe.Just) {
                        return handler(_1249.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 41, column 3 - line 46, column 1: " + [ _1249.constructor.name ]);
                };
                return catchError(__dict_MonadError_0)(act)(handle);
            };
        };
    };
};
module.exports = {
    MonadError: MonadError, 
    catchJust: catchJust, 
    catchError: catchError, 
    throwError: throwError, 
    monadErrorEither: monadErrorEither, 
    monadErrorMaybe: monadErrorMaybe
};
