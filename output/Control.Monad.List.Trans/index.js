// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Plus = require("Control.Plus");
var Data_Lazy = require("Data.Lazy");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_Tuple = require("Data.Tuple");
var Data_Unfoldable = require("Data.Unfoldable");
var Yield = (function () {
    function Yield(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Yield.create = function (value0) {
        return function (value1) {
            return new Yield(value0, value1);
        };
    };
    return Yield;
})();
var Skip = (function () {
    function Skip(value0) {
        this.value0 = value0;
    };
    Skip.create = function (value0) {
        return new Skip(value0);
    };
    return Skip;
})();
var Done = (function () {
    function Done() {

    };
    Done.value = new Done();
    return Done;
})();
var ListT = (function () {
    function ListT(value0) {
        this.value0 = value0;
    };
    ListT.create = function (value0) {
        return new ListT(value0);
    };
    return ListT;
})();
var wrapLazy = function (__dict_Applicative_0) {
    return function (v) {
        return ListT.create(Prelude.pure(__dict_Applicative_0)(new Skip(v)));
    };
};
var wrapEffect = function (__dict_Functor_1) {
    return function (v) {
        return ListT.create(Prelude["<$>"](__dict_Functor_1)(function (_2152) {
            return Skip.create(Data_Lazy.defer(Prelude["const"](_2152)));
        })(v));
    };
};
var unfold = function (__dict_Monad_2) {
    return function (f) {
        return function (z) {
            var g = function (_563) {
                if (_563 instanceof Data_Maybe.Just) {
                    return new Yield(_563.value0.value1, Data_Lazy.defer(function (_556) {
                        return unfold(__dict_Monad_2)(f)(_563.value0.value0);
                    }));
                };
                if (_563 instanceof Data_Maybe.Nothing) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 116, column 3 - line 117, column 3: " + [ _563.constructor.name ]);
            };
            return ListT.create(Prelude["<$>"](((__dict_Monad_2["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(f(z)));
        };
    };
};
var runListT = function (_559) {
    return _559.value0;
};
var scanl = function (__dict_Monad_3) {
    return function (f) {
        return function (b) {
            return function (l) {
                var g = function (_573) {
                    var h = function (_574) {
                        if (_574 instanceof Yield) {
                            var b$prime = f(_573.value0)(_574.value0);
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime, Data_Lazy.force(_574.value1)), b$prime));
                        };
                        if (_574 instanceof Skip) {
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_573.value0, Data_Lazy.force(_574.value0)), _573.value0));
                        };
                        if (_574 instanceof Done) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match at Control.Monad.List.Trans line 215, column 5 - line 217, column 5: " + [ _574.constructor.name ]);
                    };
                    return Prelude["<$>"](((__dict_Monad_3["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(runListT(_573.value1));
                };
                return unfold(__dict_Monad_3)(g)(new Data_Tuple.Tuple(b, l));
            };
        };
    };
};
var stepMap = function (__dict_Functor_4) {
    return function (f) {
        return function (l) {
            return ListT.create(Prelude["<$>"](__dict_Functor_4)(f)(runListT(l)));
        };
    };
};
var takeWhile = function (__dict_Applicative_5) {
    return function (f) {
        var g = function (_565) {
            if (_565 instanceof Yield) {
                var _2081 = f(_565.value0);
                if (_2081) {
                    return new Yield(_565.value0, Prelude["<$>"](Data_Lazy.functorLazy)(takeWhile(__dict_Applicative_5)(f))(_565.value1));
                };
                if (!_2081) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 140, column 3 - line 141, column 3: " + [ _2081.constructor.name ]);
            };
            if (_565 instanceof Skip) {
                return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(takeWhile(__dict_Applicative_5)(f))(_565.value0));
            };
            if (_565 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 140, column 3 - line 141, column 3: " + [ _565.constructor.name ]);
        };
        return stepMap((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g);
    };
};
var uncons = function (__dict_Monad_6) {
    return function (l) {
        var g = function (_570) {
            if (_570 instanceof Yield) {
                return Prelude.pure(__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Just.create(new Data_Tuple.Tuple(_570.value0, Data_Lazy.force(_570.value1))));
            };
            if (_570 instanceof Skip) {
                return uncons(__dict_Monad_6)(Data_Lazy.force(_570.value0));
            };
            if (_570 instanceof Done) {
                return Prelude.pure(__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Nothing.value);
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 181, column 3 - line 182, column 3: " + [ _570.constructor.name ]);
        };
        return Prelude[">>="](__dict_Monad_6["__superclass_Prelude.Bind_1"]())(runListT(l))(g);
    };
};
var tail = function (__dict_Monad_7) {
    return function (l) {
        return Prelude["<$>"](((__dict_Monad_7["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(__dict_Monad_7)(l));
    };
};
var prepend$prime = function (__dict_Applicative_8) {
    return function (h) {
        return function (t) {
            return ListT.create(Prelude.pure(__dict_Applicative_8)(new Yield(h, t)));
        };
    };
};
var prepend = function (__dict_Applicative_9) {
    return function (h) {
        return function (t) {
            return prepend$prime(__dict_Applicative_9)(h)(Data_Lazy.defer(Prelude["const"](t)));
        };
    };
};
var nil = function (__dict_Applicative_10) {
    return ListT.create(Prelude.pure(__dict_Applicative_10)(Done.value));
};
var singleton = function (__dict_Applicative_12) {
    return function (a) {
        return prepend(__dict_Applicative_12)(a)(nil(__dict_Applicative_12));
    };
};
var take = function (__dict_Applicative_13) {
    return function (_560) {
        return function (fa) {
            if (_560 === 0) {
                return nil(__dict_Applicative_13);
            };
            var f = function (_564) {
                if (_564 instanceof Yield) {
                    return new Yield(_564.value0, Prelude["<$>"](Data_Lazy.functorLazy)(take(__dict_Applicative_13)(_560 - 1))(_564.value1));
                };
                if (_564 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(take(__dict_Applicative_13)(_560))(_564.value0));
                };
                if (_564 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 133, column 3 - line 134, column 3: " + [ _564.constructor.name ]);
            };
            return stepMap((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(fa);
        };
    };
};
var zipWith$prime = function (__dict_Monad_14) {
    return function (f) {
        var g = function (_575) {
            return function (_576) {
                if (_576 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Monad_14["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_14["__superclass_Prelude.Applicative_0"]()));
                };
                if (_575 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Monad_14["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_14["__superclass_Prelude.Applicative_0"]()));
                };
                if (_575 instanceof Data_Maybe.Just && _576 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"](((__dict_Monad_14["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(prepend$prime(__dict_Monad_14["__superclass_Prelude.Applicative_0"]()))(Data_Lazy.defer(function (_557) {
                        return zipWith$prime(__dict_Monad_14)(f)(_575.value0.value1)(_576.value0.value1);
                    })))(f(_575.value0.value0)(_576.value0.value0));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 223, column 3 - line 228, column 3: " + [ _575.constructor.name, _576.constructor.name ]);
            };
        };
        var loop = function (fa) {
            return function (fb) {
                return wrapEffect(((__dict_Monad_14["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.bind(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_14)(fa))(function (_66) {
                    return Prelude.bind(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_14)(fb))(function (_65) {
                        return g(_66)(_65);
                    });
                }));
            };
        };
        return loop;
    };
};
var zipWith = function (__dict_Monad_15) {
    return function (f) {
        var g = function (a) {
            return function (b) {
                return Prelude.pure(__dict_Monad_15["__superclass_Prelude.Applicative_0"]())(f(a)(b));
            };
        };
        return zipWith$prime(__dict_Monad_15)(g);
    };
};
var mapMaybe = function (__dict_Functor_20) {
    return function (f) {
        var g = function (_569) {
            if (_569 instanceof Yield) {
                return Data_Maybe.fromMaybe(Skip.create)(Prelude["<$>"](Data_Maybe.functorMaybe)(Yield.create)(f(_569.value0)))(Prelude["<$>"](Data_Lazy.functorLazy)(mapMaybe(__dict_Functor_20)(f))(_569.value1));
            };
            if (_569 instanceof Skip) {
                return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(mapMaybe(__dict_Functor_20)(f))(_569.value0));
            };
            if (_569 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 169, column 3 - line 170, column 3: " + [ _569.constructor.name ]);
        };
        return stepMap(__dict_Functor_20)(g);
    };
};
var iterate = function (__dict_Monad_21) {
    return function (f) {
        return function (a) {
            var g = function (a_1) {
                return Prelude.pure(__dict_Monad_21["__superclass_Prelude.Applicative_0"]())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(a_1), a_1)));
            };
            return unfold(__dict_Monad_21)(g)(a);
        };
    };
};
var repeat = function (__dict_Monad_22) {
    return iterate(__dict_Monad_22)(Prelude.id(Prelude.categoryFn));
};
var head = function (__dict_Monad_23) {
    return function (l) {
        return Prelude["<$>"](((__dict_Monad_23["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(__dict_Monad_23)(l));
    };
};
var functorListT = function (__dict_Functor_24) {
    return new Prelude.Functor(function (f) {
        var g = function (_577) {
            if (_577 instanceof Yield) {
                return new Yield(f(_577.value0), Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorListT(__dict_Functor_24))(f))(_577.value1));
            };
            if (_577 instanceof Skip) {
                return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorListT(__dict_Functor_24))(f))(_577.value0));
            };
            if (_577 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 246, column 5 - line 247, column 5: " + [ _577.constructor.name ]);
        };
        return stepMap(__dict_Functor_24)(g);
    });
};
var fromEffect = function (__dict_Applicative_25) {
    return function (fa) {
        return ListT.create(Prelude["<$>"]((__dict_Applicative_25["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (_10) {
            return new Yield(_10, Data_Lazy.defer(function (_555) {
                return nil(__dict_Applicative_25);
            }));
        })(fa));
    };
};
var monadTransListT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_26) {
    return fromEffect(__dict_Monad_26["__superclass_Prelude.Applicative_0"]());
});
var foldl$prime = function (__dict_Monad_27) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (_571) {
                    if (_571 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(__dict_Monad_27["__superclass_Prelude.Applicative_0"]())(b);
                    };
                    if (_571 instanceof Data_Maybe.Just) {
                        return Prelude[">>="](__dict_Monad_27["__superclass_Prelude.Bind_1"]())(f(b)(_571.value0.value0))(Prelude.flip(loop)(_571.value0.value1));
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 198, column 5 - line 199, column 5: " + [ _571.constructor.name ]);
                };
                return Prelude[">>="](__dict_Monad_27["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_27)(l))(g);
            };
        };
        return loop;
    };
};
var foldl = function (__dict_Monad_28) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (_572) {
                    if (_572 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(__dict_Monad_28["__superclass_Prelude.Applicative_0"]())(b);
                    };
                    if (_572 instanceof Data_Maybe.Just) {
                        return loop(f(b)(_572.value0.value0))(_572.value0.value1);
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 206, column 5 - line 207, column 5: " + [ _572.constructor.name ]);
                };
                return Prelude[">>="](__dict_Monad_28["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_28)(l))(g);
            };
        };
        return loop;
    };
};
var filter = function (__dict_Functor_29) {
    return function (f) {
        var g = function (_568) {
            if (_568 instanceof Yield) {
                var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(filter(__dict_Functor_29)(f))(_568.value1);
                var _2124 = f(_568.value0);
                if (_2124) {
                    return new Yield(_568.value0, s$prime);
                };
                if (!_2124) {
                    return new Skip(s$prime);
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 162, column 3 - line 163, column 3: " + [ _2124.constructor.name ]);
            };
            if (_568 instanceof Skip) {
                var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(filter(__dict_Functor_29)(f))(_568.value0);
                return new Skip(s$prime);
            };
            if (_568 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 162, column 3 - line 163, column 3: " + [ _568.constructor.name ]);
        };
        return stepMap(__dict_Functor_29)(g);
    };
};
var dropWhile = function (__dict_Applicative_30) {
    return function (f) {
        var g = function (_567) {
            if (_567 instanceof Yield) {
                var _2129 = f(_567.value0);
                if (_2129) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(dropWhile(__dict_Applicative_30)(f))(_567.value1));
                };
                if (!_2129) {
                    return new Yield(_567.value0, _567.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 155, column 3 - line 156, column 3: " + [ _2129.constructor.name ]);
            };
            if (_567 instanceof Skip) {
                return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(dropWhile(__dict_Applicative_30)(f))(_567.value0));
            };
            if (_567 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 155, column 3 - line 156, column 3: " + [ _567.constructor.name ]);
        };
        return stepMap((__dict_Applicative_30["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g);
    };
};
var drop = function (__dict_Applicative_31) {
    return function (_561) {
        return function (fa) {
            if (_561 === 0) {
                return fa;
            };
            var f = function (_566) {
                if (_566 instanceof Yield) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(drop(__dict_Applicative_31)(_561 - 1))(_566.value1));
                };
                if (_566 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(drop(__dict_Applicative_31)(_561))(_566.value0));
                };
                if (_566 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 148, column 3 - line 149, column 3: " + [ _566.constructor.name ]);
            };
            return stepMap((__dict_Applicative_31["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(fa);
        };
    };
};
var cons = function (__dict_Applicative_32) {
    return function (lh) {
        return function (t) {
            return ListT.create(Prelude.pure(__dict_Applicative_32)(new Yield(Data_Lazy.force(lh), t)));
        };
    };
};
var unfoldableListT = function (__dict_Monad_33) {
    return new Data_Unfoldable.Unfoldable(function (f) {
        return function (b) {
            var go = function (_578) {
                if (_578 instanceof Data_Maybe.Nothing) {
                    return nil(__dict_Monad_33["__superclass_Prelude.Applicative_0"]());
                };
                if (_578 instanceof Data_Maybe.Just) {
                    return cons(__dict_Monad_33["__superclass_Prelude.Applicative_0"]())(Prelude.pure(Data_Lazy.applicativeLazy)(_578.value0.value0))(Data_Lazy.defer(function (_558) {
                        return go(f(_578.value0.value1));
                    }));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 250, column 1 - line 255, column 1: " + [ _578.constructor.name ]);
            };
            return go(f(b));
        };
    });
};
var semigroupListT = function (__dict_Applicative_35) {
    return new Prelude.Semigroup(concat(__dict_Applicative_35));
};
var concat = function (__dict_Applicative_34) {
    return function (x) {
        return function (y) {
            var f = function (_562) {
                if (_562 instanceof Yield) {
                    return new Yield(_562.value0, Prelude["<$>"](Data_Lazy.functorLazy)(function (_8) {
                        return Prelude["<>"](semigroupListT(__dict_Applicative_34))(_8)(y);
                    })(_562.value1));
                };
                if (_562 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(function (_9) {
                        return Prelude["<>"](semigroupListT(__dict_Applicative_34))(_9)(y);
                    })(_562.value0));
                };
                if (_562 instanceof Done) {
                    return new Skip(Data_Lazy.defer(Prelude["const"](y)));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 92, column 3 - line 93, column 3: " + [ _562.constructor.name ]);
            };
            return stepMap((__dict_Applicative_34["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(x);
        };
    };
};
var monoidListT = function (__dict_Applicative_16) {
    return new Data_Monoid.Monoid(function () {
        return semigroupListT(__dict_Applicative_16);
    }, nil(__dict_Applicative_16));
};
var catMaybes = function (__dict_Functor_36) {
    return mapMaybe(__dict_Functor_36)(Prelude.id(Prelude.categoryFn));
};
var monadListT = function (__dict_Monad_18) {
    return new Prelude.Monad(function () {
        return applicativeListT(__dict_Monad_18);
    }, function () {
        return bindListT(__dict_Monad_18);
    });
};
var bindListT = function (__dict_Monad_37) {
    return new Prelude.Bind(function () {
        return applyListT(__dict_Monad_37);
    }, function (fa) {
        return function (f) {
            var g = function (_579) {
                if (_579 instanceof Yield) {
                    var h = function (s_1) {
                        return Prelude["<>"](semigroupListT(__dict_Monad_37["__superclass_Prelude.Applicative_0"]()))(f(_579.value0))(Prelude[">>="](bindListT(__dict_Monad_37))(s_1)(f));
                    };
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(h)(_579.value1));
                };
                if (_579 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(function (_11) {
                        return Prelude[">>="](bindListT(__dict_Monad_37))(_11)(f);
                    })(_579.value0));
                };
                if (_579 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 263, column 5 - line 266, column 5: " + [ _579.constructor.name ]);
            };
            return stepMap(((__dict_Monad_37["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(fa);
        };
    });
};
var applyListT = function (__dict_Monad_38) {
    return new Prelude.Apply(function () {
        return functorListT(((__dict_Monad_38["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    }, Prelude.ap(monadListT(__dict_Monad_38)));
};
var applicativeListT = function (__dict_Monad_39) {
    return new Prelude.Applicative(function () {
        return applyListT(__dict_Monad_39);
    }, singleton(__dict_Monad_39["__superclass_Prelude.Applicative_0"]()));
};
var monadEffListT = function (__dict_MonadEff_19) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadListT(__dict_MonadEff_19["__superclass_Prelude.Monad_0"]());
    }, function (_2153) {
        return Control_Monad_Trans.lift(monadTransListT)(__dict_MonadEff_19["__superclass_Prelude.Monad_0"]())(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_19)(_2153));
    });
};
var altListT = function (__dict_Applicative_41) {
    return new Control_Alt.Alt(function () {
        return functorListT((__dict_Applicative_41["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    }, concat(__dict_Applicative_41));
};
var plusListT = function (__dict_Monad_11) {
    return new Control_Plus.Plus(function () {
        return altListT(__dict_Monad_11["__superclass_Prelude.Applicative_0"]());
    }, nil(__dict_Monad_11["__superclass_Prelude.Applicative_0"]()));
};
var alternativeListT = function (__dict_Monad_40) {
    return new Control_Alternative.Alternative(function () {
        return plusListT(__dict_Monad_40);
    }, function () {
        return applicativeListT(__dict_Monad_40);
    });
};
var monadPlusListT = function (__dict_Monad_17) {
    return new Control_MonadPlus.MonadPlus(function () {
        return alternativeListT(__dict_Monad_17);
    }, function () {
        return monadListT(__dict_Monad_17);
    });
};
module.exports = {
    "zipWith'": zipWith$prime, 
    zipWith: zipWith, 
    wrapLazy: wrapLazy, 
    wrapEffect: wrapEffect, 
    unfold: unfold, 
    uncons: uncons, 
    takeWhile: takeWhile, 
    take: take, 
    tail: tail, 
    singleton: singleton, 
    scanl: scanl, 
    repeat: repeat, 
    "prepend'": prepend$prime, 
    prepend: prepend, 
    nil: nil, 
    mapMaybe: mapMaybe, 
    iterate: iterate, 
    head: head, 
    fromEffect: fromEffect, 
    "foldl'": foldl$prime, 
    foldl: foldl, 
    filter: filter, 
    dropWhile: dropWhile, 
    drop: drop, 
    cons: cons, 
    catMaybes: catMaybes, 
    semigroupListT: semigroupListT, 
    monoidListT: monoidListT, 
    functorListT: functorListT, 
    unfoldableListT: unfoldableListT, 
    applyListT: applyListT, 
    applicativeListT: applicativeListT, 
    bindListT: bindListT, 
    monadListT: monadListT, 
    monadTransListT: monadTransListT, 
    altListT: altListT, 
    plusListT: plusListT, 
    alternativeListT: alternativeListT, 
    monadPlusListT: monadPlusListT, 
    monadEffListT: monadEffListT
};
