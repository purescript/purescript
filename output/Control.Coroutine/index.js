// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Either = require("Data.Either");
var Data_Identity = require("Data.Identity");
var Data_Functor = require("Data.Functor");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Profunctor = require("Data.Profunctor");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Free_Trans = require("Control.Monad.Free.Trans");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Transform = function (x) {
    return x;
};
var Emit = (function () {
    function Emit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Emit.create = function (value0) {
        return function (value1) {
            return new Emit(value0, value1);
        };
    };
    return Emit;
})();
var Await = function (x) {
    return x;
};
var runProcess = function (__dict_MonadRec_1) {
    return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(__dict_MonadRec_1)(function (_1665) {
        return Prelude["return"]((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(Data_Identity.runIdentity(_1665));
    });
};
var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (_493) {
            return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(_493);
        };
    };
});
var loop = function (__dict_Functor_2) {
    return function (__dict_Monad_3) {
        return function (me) {
            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(__dict_Functor_2)(__dict_Monad_3))(function (_475) {
                return Prelude.map(Control_Monad_Free_Trans.functorFreeT(__dict_Functor_2)(((__dict_Monad_3["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Data_Maybe.maybe(new Data_Either.Left(Prelude.unit))(Data_Either.Right.create))(me);
            })(Prelude.unit);
        };
    };
};
var fuseWith = function (__dict_Functor_4) {
    return function (__dict_Functor_5) {
        return function (__dict_Functor_6) {
            return function (__dict_MonadRec_7) {
                return function (zap) {
                    return function (fs) {
                        return function (gs) {
                            var go = function (_491) {
                                return Prelude.bind((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(Control_Monad_Free_Trans.resume(__dict_Functor_5)(__dict_MonadRec_7)(_491.value1))(function (_29) {
                                    return Prelude.bind((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(Control_Monad_Free_Trans.resume(__dict_Functor_4)(__dict_MonadRec_7)(_491.value0))(function (_28) {
                                        var _1610 = Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(zap(Data_Tuple.Tuple.create))(_28))(_29);
                                        if (_1610 instanceof Data_Either.Left) {
                                            return Prelude["return"]((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(_1610.value0));
                                        };
                                        if (_1610 instanceof Data_Either.Right) {
                                            return Prelude["return"]((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(Prelude.map(__dict_Functor_6)(function (t) {
                                                return Control_Monad_Free_Trans.freeT(function (_476) {
                                                    return go(t);
                                                });
                                            })(_1610.value0)));
                                        };
                                        throw new Error("Failed pattern match at Control.Coroutine line 49, column 1 - line 54, column 1: " + [ _1610.constructor.name ]);
                                    });
                                });
                            };
                            return Control_Monad_Free_Trans.freeT(function (_477) {
                                return go(new Data_Tuple.Tuple(fs, gs));
                            });
                        };
                    };
                };
            };
        };
    };
};
var functorAwait = new Prelude.Functor(Data_Profunctor.rmap(profunctorAwait));
var $bslash$div = function (__dict_MonadRec_11) {
    return fuseWith(functorAwait)(functorAwait)(functorAwait)(__dict_MonadRec_11)(function (f) {
        return function (_490) {
            return function (_489) {
                return function (_488) {
                    return f(_490(_488.value0))(_489(_488.value1));
                };
            };
        };
    });
};
var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_494) {
            return function (_1666) {
                return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g)(_494(_1666));
            };
        };
    };
});
var functorTransform = new Prelude.Functor(Data_Bifunctor.rmap(bifunctorTransform));
var transform = function (__dict_Monad_0) {
    return function (f) {
        return Control_Monad_Free_Trans.liftFreeT(functorTransform)(__dict_Monad_0)(function (i) {
            return new Data_Tuple.Tuple(f(i), Prelude.unit);
        });
    };
};
var $tilde$dollar = function (__dict_MonadRec_12) {
    return fuseWith(functorTransform)(functorAwait)(functorAwait)(__dict_MonadRec_12)(function (f) {
        return function (_483) {
            return function (_482) {
                return function (i) {
                    var _1627 = _483(i);
                    return f(_1627.value1)(_482(_1627.value0));
                };
            };
        };
    });
};
var $tilde$tilde = function (__dict_MonadRec_13) {
    return fuseWith(functorTransform)(functorTransform)(functorTransform)(__dict_MonadRec_13)(function (f) {
        return function (_485) {
            return function (_484) {
                return function (i) {
                    var _1632 = _485(i);
                    var _1633 = _484(_1632.value0);
                    return new Data_Tuple.Tuple(_1633.value0, f(_1632.value1)(_1633.value1));
                };
            };
        };
    });
};
var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_492) {
            return new Emit(f(_492.value0), g(_492.value1));
        };
    };
});
var functorEmit = new Prelude.Functor(Data_Bifunctor.rmap(bifunctorEmit));
var emit = function (__dict_Monad_14) {
    return function (o) {
        return Control_Monad_Free_Trans.liftFreeT(functorEmit)(__dict_Monad_14)(new Emit(o, Prelude.unit));
    };
};
var producer = function (__dict_Monad_15) {
    return function (recv) {
        return loop(functorEmit)(__dict_Monad_15)(Prelude.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(__dict_Monad_15))(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(__dict_Monad_15)(recv))(function (_30) {
            if (_30 instanceof Data_Either.Left) {
                return Data_Functor["$>"](Control_Monad_Free_Trans.functorFreeT(functorEmit)(((__dict_Monad_15["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(emit(__dict_Monad_15)(_30.value0))(Data_Maybe.Nothing.value);
            };
            if (_30 instanceof Data_Either.Right) {
                return Prelude["return"](Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(__dict_Monad_15))(new Data_Maybe.Just(_30.value0));
            };
            throw new Error("Failed pattern match at Control.Coroutine line 83, column 1 - line 84, column 1: " + [ _30.constructor.name ]);
        }));
    };
};
var $dollar$dollar = function (__dict_MonadRec_8) {
    return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(__dict_MonadRec_8)(function (f) {
        return function (_479) {
            return function (_478) {
                return f(_479.value1)(_478(_479.value0));
            };
        };
    });
};
var $dollar$tilde = function (__dict_MonadRec_9) {
    return fuseWith(functorEmit)(functorTransform)(functorEmit)(__dict_MonadRec_9)(function (f) {
        return function (_481) {
            return function (_480) {
                var _1653 = _480(_481.value0);
                return new Emit(_1653.value0, f(_481.value1)(_1653.value1));
            };
        };
    });
};
var $div$bslash = function (__dict_MonadRec_10) {
    return fuseWith(functorEmit)(functorEmit)(functorEmit)(__dict_MonadRec_10)(function (f) {
        return function (_487) {
            return function (_486) {
                return new Emit(new Data_Tuple.Tuple(_487.value0, _486.value0), f(_487.value1)(_486.value1));
            };
        };
    });
};
var await = function (__dict_Monad_16) {
    return Control_Monad_Free_Trans.liftFreeT(functorAwait)(__dict_Monad_16)(Prelude.id(Prelude.categoryFn));
};
var consumer = function (__dict_Monad_17) {
    return function (send) {
        return loop(functorAwait)(__dict_Monad_17)(Prelude.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(__dict_Monad_17))(await(__dict_Monad_17))(function (_31) {
            return Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(__dict_Monad_17)(send(_31));
        }));
    };
};
module.exports = {
    Transform: Transform, 
    Await: Await, 
    Emit: Emit, 
    "\\/": $bslash$div, 
    "/\\": $div$bslash, 
    "~~": $tilde$tilde, 
    "~$": $tilde$dollar, 
    "$~": $dollar$tilde, 
    "$$": $dollar$dollar, 
    transform: transform, 
    consumer: consumer, 
    await: await, 
    producer: producer, 
    emit: emit, 
    fuseWith: fuseWith, 
    runProcess: runProcess, 
    loop: loop, 
    bifunctorEmit: bifunctorEmit, 
    functorEmit: functorEmit, 
    profunctorAwait: profunctorAwait, 
    functorAwait: functorAwait, 
    bifunctorTransform: bifunctorTransform, 
    functorTransform: functorTransform
};
