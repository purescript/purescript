// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Either = require("Data.Either");
var Data_Functor = require("Data.Functor");
var Data_Identity = require("Data.Identity");
var Control_Monad_Eff_Unsafe = require("Control.Monad.Eff.Unsafe");
var Data_Either_Unsafe = require("Data.Either.Unsafe");
var MonadRec = function (__superclass_Prelude$dotMonad_0, tailRecM) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var tailRecM2 = function (__dict_MonadRec_0) {
    return function (f) {
        return function (a) {
            return function (b) {
                return tailRecM(__dict_MonadRec_0)(function (o) {
                    return f(o.a)(o.b);
                })({
                    a: a, 
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function (__dict_MonadRec_1) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return tailRecM(__dict_MonadRec_1)(function (o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a, 
                        b: b, 
                        c: c
                    });
                };
            };
        };
    };
};
var tailRecEff = function (f) {
    return function (a) {
        var f$prime = function (_1310) {
            return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(f(_1310));
        };
        return function __do() {
            var _24 = f$prime(a)();
            var _23 = {
                value: _24
            };
            (function () {
                while (!(function __do() {
                    var _22 = _23.value;
                    return (function () {
                        if (_22 instanceof Data_Either.Left) {
                            return function __do() {
                                var _21 = f$prime(_22.value0)();
                                _23.value = _21;
                                return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                            };
                        };
                        if (_22 instanceof Data_Either.Right) {
                            return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                        };
                        throw new Error("Failed pattern match at Control.Monad.Rec.Class line 75, column 1 - line 76, column 1: " + [ _22.constructor.name ]);
                    })()();
                })()) {

                };
                return {};
            })();
            return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Either_Unsafe.fromRight)(Control_Monad_ST.readSTRef(_23))();
        };
    };
};
var tailRec = function (f) {
    return function (a) {
        var go = function (__copy__388) {
            var _388 = __copy__388;
            tco: while (true) {
                if (_388 instanceof Data_Either.Left) {
                    var __tco__388 = f(_388.value0);
                    _388 = __tco__388;
                    continue tco;
                };
                if (_388 instanceof Data_Either.Right) {
                    return _388.value0;
                };
                throw new Error("Failed pattern match at Control.Monad.Rec.Class line 63, column 1 - line 64, column 1: " + [ _388.constructor.name ]);
            };
        };
        return go(f(a));
    };
};
var monadRecIdentity = new MonadRec(function () {
    return Data_Identity.monadIdentity;
}, function (f) {
    return function (_1311) {
        return Data_Identity.Identity(tailRec(function (_1312) {
            return Data_Identity.runIdentity(f(_1312));
        })(_1311));
    };
});
var monadRecEff = new MonadRec(function () {
    return Control_Monad_Eff.monadEff;
}, tailRecEff);
var forever = function (__dict_MonadRec_2) {
    return function (ma) {
        return tailRecM(__dict_MonadRec_2)(function (u) {
            return Data_Functor["<$"]((((__dict_MonadRec_2["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(new Data_Either.Left(u))(ma);
        })(Prelude.unit);
    };
};
module.exports = {
    MonadRec: MonadRec, 
    forever: forever, 
    tailRecM3: tailRecM3, 
    tailRecM2: tailRecM2, 
    tailRecM: tailRecM, 
    tailRec: tailRec, 
    monadRecIdentity: monadRecIdentity, 
    monadRecEff: monadRecEff
};
