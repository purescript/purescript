// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Identity = require("Data.Identity");
var Distributive = function (__superclass_Prelude$dotFunctor_0, collect, distribute) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.collect = collect;
    this.distribute = distribute;
};
var distributiveIdentity = new Distributive(function () {
    return Data_Identity.functorIdentity;
}, function (__dict_Functor_1) {
    return function (f) {
        return function (_1313) {
            return Data_Identity.Identity(Prelude.map(__dict_Functor_1)(function (_1314) {
                return Data_Identity.runIdentity(f(_1314));
            })(_1313));
        };
    };
}, function (__dict_Functor_0) {
    return function (_1315) {
        return Data_Identity.Identity(Prelude.map(__dict_Functor_0)(Data_Identity.runIdentity)(_1315));
    };
});
var distribute = function (dict) {
    return dict.distribute;
};
var distributiveFunction = new Distributive(function () {
    return Prelude.functorFn;
}, function (__dict_Functor_3) {
    return function (f) {
        return function (_1316) {
            return distribute(distributiveFunction)(__dict_Functor_3)(Prelude.map(__dict_Functor_3)(f)(_1316));
        };
    };
}, function (__dict_Functor_2) {
    return function (a) {
        return function (e) {
            return Prelude.map(__dict_Functor_2)(function (_3) {
                return _3(e);
            })(a);
        };
    };
});
var cotraverse = function (__dict_Distributive_4) {
    return function (__dict_Functor_5) {
        return function (f) {
            return function (_1317) {
                return Prelude.map(__dict_Distributive_4["__superclass_Prelude.Functor_0"]())(f)(distribute(__dict_Distributive_4)(__dict_Functor_5)(_1317));
            };
        };
    };
};
var collect = function (dict) {
    return dict.collect;
};
module.exports = {
    Distributive: Distributive, 
    cotraverse: cotraverse, 
    collect: collect, 
    distribute: distribute, 
    distributiveIdentity: distributiveIdentity, 
    distributiveFunction: distributiveFunction
};
