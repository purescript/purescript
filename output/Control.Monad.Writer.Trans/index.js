// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Monoid = require("Data.Monoid");
var Data_Tuple = require("Data.Tuple");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Cont_Class = require("Control.Monad.Cont.Class");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("Control.Monad.Reader.Class");
var Control_Monad_Writer_Class = require("Control.Monad.Writer.Class");
var Control_Monad_State_Class = require("Control.Monad.State.Class");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var WriterT = function (x) {
    return x;
};
var runWriterT = function (_525) {
    return _525;
};
var monadTransWriterT = function (__dict_Monoid_6) {
    return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_7) {
        return function (m) {
            return WriterT(Prelude.bind(__dict_Monad_7["__superclass_Prelude.Bind_1"]())(m)(function (_57) {
                return Prelude["return"](__dict_Monad_7["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_57, Data_Monoid.mempty(__dict_Monoid_6)));
            }));
        };
    });
};
var mapWriterT = function (f) {
    return function (m) {
        return WriterT(f(runWriterT(m)));
    };
};
var functorWriterT = function (__dict_Functor_23) {
    return new Prelude.Functor(function (f) {
        return mapWriterT(Prelude["<$>"](__dict_Functor_23)(function (_524) {
            return new Data_Tuple.Tuple(f(_524.value0), _524.value1);
        }));
    });
};
var execWriterT = function (__dict_Apply_24) {
    return function (m) {
        return Prelude["<$>"](__dict_Apply_24["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runWriterT(m));
    };
};
var applyWriterT = function (__dict_Monoid_27) {
    return function (__dict_Apply_28) {
        return new Prelude.Apply(function () {
            return functorWriterT(__dict_Apply_28["__superclass_Prelude.Functor_0"]());
        }, function (f) {
            return function (v) {
                return WriterT((function () {
                    var k = function (_526) {
                        return function (_527) {
                            return new Data_Tuple.Tuple(_526.value0(_527.value0), Prelude["<>"](__dict_Monoid_27["__superclass_Prelude.Semigroup_0"]())(_526.value1)(_527.value1));
                        };
                    };
                    return Prelude["<*>"](__dict_Apply_28)(Prelude["<$>"](__dict_Apply_28["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                })());
            };
        });
    };
};
var bindWriterT = function (__dict_Monoid_25) {
    return function (__dict_Monad_26) {
        return new Prelude.Bind(function () {
            return applyWriterT(__dict_Monoid_25)((__dict_Monad_26["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]());
        }, function (m) {
            return function (k) {
                return WriterT(Prelude.bind(__dict_Monad_26["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_55) {
                    return Prelude.bind(__dict_Monad_26["__superclass_Prelude.Bind_1"]())(runWriterT(k(_55.value0)))(function (_54) {
                        return Prelude["return"](__dict_Monad_26["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_54.value0, Prelude["<>"](__dict_Monoid_25["__superclass_Prelude.Semigroup_0"]())(_55.value1)(_54.value1)));
                    });
                }));
            };
        });
    };
};
var applicativeWriterT = function (__dict_Monoid_29) {
    return function (__dict_Applicative_30) {
        return new Prelude.Applicative(function () {
            return applyWriterT(__dict_Monoid_29)(__dict_Applicative_30["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return WriterT(Prelude.pure(__dict_Applicative_30)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_29))));
        });
    };
};
var monadWriterT = function (__dict_Monoid_4) {
    return function (__dict_Monad_5) {
        return new Prelude.Monad(function () {
            return applicativeWriterT(__dict_Monoid_4)(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindWriterT(__dict_Monoid_4)(__dict_Monad_5);
        });
    };
};
var monadContWriterT = function (__dict_Monoid_19) {
    return function (__dict_MonadCont_20) {
        return new Control_Monad_Cont_Class.MonadCont(function () {
            return monadWriterT(__dict_Monoid_19)(__dict_MonadCont_20["__superclass_Prelude.Monad_0"]());
        }, function (f) {
            return WriterT(Control_Monad_Cont_Class.callCC(__dict_MonadCont_20)(function (c) {
                return runWriterT(f(function (a) {
                    return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_19))));
                }));
            }));
        });
    };
};
var monadEffWriter = function (__dict_Monad_16) {
    return function (__dict_Monoid_17) {
        return function (__dict_MonadEff_18) {
            return new Control_Monad_Eff_Class.MonadEff(function () {
                return monadWriterT(__dict_Monoid_17)(__dict_Monad_16);
            }, function (_1889) {
                return Control_Monad_Trans.lift(monadTransWriterT(__dict_Monoid_17))(__dict_Monad_16)(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_18)(_1889));
            });
        };
    };
};
var monadErrorWriterT = function (__dict_Monoid_14) {
    return function (__dict_MonadError_15) {
        return new Control_Monad_Error_Class.MonadError(function () {
            return monadWriterT(__dict_Monoid_14)(__dict_MonadError_15["__superclass_Prelude.Monad_0"]());
        }, function (m) {
            return function (h) {
                return WriterT(Control_Monad_Error_Class.catchError(__dict_MonadError_15)(runWriterT(m))(function (e) {
                    return runWriterT(h(e));
                }));
            };
        }, function (e) {
            return Control_Monad_Trans.lift(monadTransWriterT(__dict_Monoid_14))(__dict_MonadError_15["__superclass_Prelude.Monad_0"]())(Control_Monad_Error_Class.throwError(__dict_MonadError_15)(e));
        });
    };
};
var monadReaderWriterT = function (__dict_Monoid_21) {
    return function (__dict_MonadReader_22) {
        return new Control_Monad_Reader_Class.MonadReader(function () {
            return monadWriterT(__dict_Monoid_21)(__dict_MonadReader_22["__superclass_Prelude.Monad_0"]());
        }, Control_Monad_Trans.lift(monadTransWriterT(__dict_Monoid_21))(__dict_MonadReader_22["__superclass_Prelude.Monad_0"]())(Control_Monad_Reader_Class.ask(__dict_MonadReader_22)), function (f) {
            return mapWriterT(Control_Monad_Reader_Class.local(__dict_MonadReader_22)(f));
        });
    };
};
var monadRecWriterT = function (__dict_Monoid_10) {
    return function (__dict_MonadRec_11) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadWriterT(__dict_Monoid_10)(__dict_MonadRec_11["__superclass_Prelude.Monad_0"]());
        }, function (f) {
            return function (a) {
                var f$prime = function (_528) {
                    return Prelude.bind((__dict_MonadRec_11["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runWriterT(f(_528.value0)))(function (_56) {
                        return Prelude["return"]((__dict_MonadRec_11["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                            if (_56.value0 instanceof Data_Either.Left) {
                                return new Data_Either.Left(new Data_Tuple.Tuple(_56.value0.value0, Prelude["<>"](__dict_Monoid_10["__superclass_Prelude.Semigroup_0"]())(_528.value1)(_56.value1)));
                            };
                            if (_56.value0 instanceof Data_Either.Right) {
                                return new Data_Either.Right(new Data_Tuple.Tuple(_56.value0.value0, Prelude["<>"](__dict_Monoid_10["__superclass_Prelude.Semigroup_0"]())(_528.value1)(_56.value1)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Writer.Trans line 78, column 5 - line 84, column 1: " + [ _56.value0.constructor.name ]);
                        })());
                    });
                };
                return WriterT(Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_11)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_10))));
            };
        });
    };
};
var monadStateWriterT = function (__dict_Monoid_8) {
    return function (__dict_MonadState_9) {
        return new Control_Monad_State_Class.MonadState(function () {
            return monadWriterT(__dict_Monoid_8)(__dict_MonadState_9["__superclass_Prelude.Monad_0"]());
        }, function (f) {
            return Control_Monad_Trans.lift(monadTransWriterT(__dict_Monoid_8))(__dict_MonadState_9["__superclass_Prelude.Monad_0"]())(Control_Monad_State_Class.state(__dict_MonadState_9)(f));
        });
    };
};
var monadWriterWriterT = function (__dict_Monoid_2) {
    return function (__dict_Monad_3) {
        return new Control_Monad_Writer_Class.MonadWriter(function () {
            return monadWriterT(__dict_Monoid_2)(__dict_Monad_3);
        }, function (m) {
            return WriterT(Prelude.bind(__dict_Monad_3["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_58) {
                return Prelude["return"](__dict_Monad_3["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_58.value0, _58.value1), _58.value1));
            }));
        }, function (m) {
            return WriterT(Prelude.bind(__dict_Monad_3["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_59) {
                return Prelude["return"](__dict_Monad_3["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_59.value0.value0, _59.value0.value1(_59.value1)));
            }));
        }, function (_1890) {
            return WriterT(Prelude["return"](__dict_Monad_3["__superclass_Prelude.Applicative_0"]())(_1890));
        });
    };
};
var altWriterT = function (__dict_Monoid_33) {
    return function (__dict_Alt_34) {
        return new Control_Alt.Alt(function () {
            return functorWriterT(__dict_Alt_34["__superclass_Prelude.Functor_0"]());
        }, function (m) {
            return function (n) {
                return WriterT(Control_Alt["<|>"](__dict_Alt_34)(runWriterT(m))(runWriterT(n)));
            };
        });
    };
};
var plusWriterT = function (__dict_Monoid_0) {
    return function (__dict_Plus_1) {
        return new Control_Plus.Plus(function () {
            return altWriterT(__dict_Monoid_0)(__dict_Plus_1["__superclass_Control.Alt.Alt_0"]());
        }, Control_Plus.empty(__dict_Plus_1));
    };
};
var alternativeWriterT = function (__dict_Monoid_31) {
    return function (__dict_Alternative_32) {
        return new Control_Alternative.Alternative(function () {
            return plusWriterT(__dict_Monoid_31)(__dict_Alternative_32["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeWriterT(__dict_Monoid_31)(__dict_Alternative_32["__superclass_Prelude.Applicative_0"]());
        });
    };
};
var monadPlusWriterT = function (__dict_Monoid_12) {
    return function (__dict_MonadPlus_13) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeWriterT(__dict_Monoid_12)(__dict_MonadPlus_13["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadWriterT(__dict_Monoid_12)(__dict_MonadPlus_13["__superclass_Prelude.Monad_0"]());
        });
    };
};
module.exports = {
    WriterT: WriterT, 
    mapWriterT: mapWriterT, 
    execWriterT: execWriterT, 
    runWriterT: runWriterT, 
    functorWriterT: functorWriterT, 
    applyWriterT: applyWriterT, 
    applicativeWriterT: applicativeWriterT, 
    altWriterT: altWriterT, 
    plusWriterT: plusWriterT, 
    alternativeWriterT: alternativeWriterT, 
    bindWriterT: bindWriterT, 
    monadWriterT: monadWriterT, 
    monadRecWriterT: monadRecWriterT, 
    monadPlusWriterT: monadPlusWriterT, 
    monadTransWriterT: monadTransWriterT, 
    monadEffWriter: monadEffWriter, 
    monadContWriterT: monadContWriterT, 
    monadErrorWriterT: monadErrorWriterT, 
    monadReaderWriterT: monadReaderWriterT, 
    monadStateWriterT: monadStateWriterT, 
    monadWriterWriterT: monadWriterWriterT
};
