platform: x64
version: '{build}'
environment:
  # Keep the path as short as possible, just in case.
  STACK_ROOT: c:\s
  STACK_VER: 1.7.1
  RELEASE_USER: purescript
  RELEASE_REPO: purescript
  # We want to save the build cache on all builds, including those that failed,
  # because this allows us to pick up where we left off in subsequent builds
  # (in particular, compiling all of the Haskell dependencies of the compiler
  # can take long enough that the build is terminated before we can finish).
  # By default AppVeyor only saves the build cache on builds which succeed, so
  # we ask to save the cache on failures too by setting this environment
  # variable; see
  # https://www.appveyor.com/docs/build-cache/#saving-cache-for-failed-build
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  # See https://github.com/commercialhaskell/stack/issues/3944, might no
  # longer be necessary after we've moved to a snapshot with network >= 0.2.7.1
  TMP: "c:\\tmp"
branches:
  # Only build master and tagged versions, i.e. not feature branches; feature
  # branches already get built after opening a pull request.
  #
  # Note that, unlike Travis CI, there is no need for a semver tag regexp
  # here, as AppVeyor seems to build all tags which are reachable from any
  # of the branches listed below.
  only:
    - master
cache:
# appveyor/cache-buster.txt is a file which, if modified, invalidates the
# cached version of "c:\\s" (i.e. stack's cache). If bad data gets into the
# cache for any reason, the cache can be invalidated by committing a change to
# this file. See https://www.appveyor.com/docs/build-cache/ for more
# information.
- c:\s -> ci/appveyor-cache-buster.txt
install:
- ps: Install-Product node 10
- npm install -g bower

- ps: |
    New-Item -ItemType Directory -Force -Path C:\tools
    $env:Path += ";C:\tools"
    $stackRelease = "stack-$env:STACK_VER-windows-x86_64"
    $downloadUrl = "https://github.com/commercialhaskell/stack/releases/download/v$env:STACK_VER/$stackRelease.zip"
    (New-Object Net.WebClient).DownloadFile($downloadUrl, 'c:\tools\stack.zip')
    pushd c:\tools
    7z x c:\tools\stack.zip stack.exe
    popd

build_script:
- set BUILD_TYPE=normal
- if defined APPVEYOR_REPO_TAG_NAME ( set CI_RELEASE=true )
- c:\msys64\usr\bin\bash ci\build.sh
on_success:
- ps: |
    function UploadFile
    {
      github-release upload --user $env:RELEASE_USER --repo $env:RELEASE_REPO --tag $env:APPVEYOR_REPO_TAG_NAME --file $args[0] --name $args[0]
    }

    if ($env:APPVEYOR_REPO_TAG_NAME)
    {
      bash ./bundle/build.sh win64

      (New-Object Net.WebClient).DownloadFile('https://github.com/aktau/github-release/releases/download/v0.6.2/windows-amd64-github-release.zip', 'c:\tools\github-release.zip')
      pushd c:\tools
      7z x github-release.zip bin/windows/amd64/github-release.exe
      Copy-Item bin/windows/amd64/github-release.exe github-release.exe
      popd

      pushd bundle
      UploadFile win64.tar.gz
      UploadFile win64.sha
      popd
    }
