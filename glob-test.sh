#!/usr/bin/env sh

# Creates the following structure
# z/Foo.purs
# z/src/Bar.purs
# z/src/Bar/Baz.purs

mkdir z
pushd z

cat > Foo.purs <<EOF
module Foo where
foo = 1 :: Int
EOF

mkdir src
pushd src

cat > Bar.purs <<EOF
module Bar where
bar = 1 :: Int
EOF

mkdir Bar
pushd Bar

cat > Baz.purs <<EOF
module Bar.Baz where
baz = 1 :: Int
EOF

popd # Bar
popd # src

cat > globsAll <<EOF
# Generated by Spago. Do not edit!

Foo.purs
src/**/*.purs
test/**/*.purs
EOF

cat > globsNoFoo <<EOF
# Generated by Spago. Do not edit!

src/**/*.purs
test/**/*.purs
EOF

EXPECTED=$(purs compile --output out1 Foo.purs src/**/*.purs test/**/*.purs)
SOURCE_GLOBS=$(purs compile  --output out2 --source-globs globsAll)
MIXED_ALL=$(purs compile  --output out3 --source-globs globsAll Foo.purs)
MIXED_NO_FOO=$(purs compile  --output out4 --source-globs globsNoFoo Foo.purs)

popd # z

if [ "${EXPECTED}" = ""]; then
  echo "'purs compile' output should not be empty"
  exit 1
fi

if [ "${EXPECTED}" = "${SOURCE_GLOBS}" ]; then
  echo "SOURCE_GLOBS is correct"
else
  echo "SOURCE_GLOBS output different from EXPECTED"
  echo "Expected: ${EXPECTED}"
  echo "SOURCE_GLOBS: ${SOURCE_GLOBS}"
  exit 1
fi

if [ "${EXPECTED}" = "${MIXED_ALL}" ]; then
  echo "MIXED_ALL is correct"
else
  echo "MIXED_ALL output different from EXPECTED"
  echo "Expected: ${MIXED_ALL}"
  echo "MIXED_ALL: ${MIXED_ALL}"
  exit 1
fi

if [ "${EXPECTED}" = "${MIXED_NO_FOO}" ]; then
  echo "MIXED_NO_FOO is correct"
else
  echo "MIXED_NO_FOO output different from EXPECTED"
  echo "Expected: ${MIXED_NO_FOO}"
  echo "MIXED_NO_FOO: ${MIXED_NO_FOO}"
  exit 1
fi

echo "Tests passed"
exit 0
